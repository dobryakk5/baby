"""
–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤ —Ñ–µ—Ä—Ç–∏–ª—å–Ω–æ—Å—Ç–∏ —Å Telegram –±–æ—Ç–æ–º
"""

from aiogram import types, F
from aiogram.types import Message, CallbackQuery, BufferedInputFile
from aiogram.utils.keyboard import InlineKeyboardBuilder
import logging
from datetime import datetime, timedelta
from db_handler import db
from fertility_chart_generator import (
    generate_fertility_chart, 
    get_current_fertility_phase,
    get_fertility_predictions
)

async def handle_chart_request_button(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –≥—Ä–∞—Ñ–∏–∫–æ–≤"""
    try:
        builder = InlineKeyboardBuilder()
        builder.button(text="üìà –ì—Ä–∞—Ñ–∏–∫ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã", callback_data="chart_temperature")
        builder.button(text="üìä –°–≤–æ–¥–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫", callback_data="chart_summary")
        builder.button(text="üîÆ –ü—Ä–æ–≥–Ω–æ–∑ —Ñ–µ—Ä—Ç–∏–ª—å–Ω–æ—Å—Ç–∏", callback_data="chart_prediction")
        builder.button(text="üìÖ –¢–µ–∫—É—â–∞—è —Ñ–∞–∑–∞", callback_data="chart_current_phase")
        builder.adjust(2)
        
        help_text = (
            "üìä <b>–ì—Ä–∞—Ñ–∏–∫–∏ –∏ –∞–Ω–∞–ª–∏–∑ —Ñ–µ—Ä—Ç–∏–ª—å–Ω–æ—Å—Ç–∏</b>\n\n"
            "–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:\n\n"
            "üìà <b>–ì—Ä–∞—Ñ–∏–∫ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã</b> - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–∑–∞–ª—å–Ω–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã —Å –≤—ã–¥–µ–ª–µ–Ω–∏–µ–º —Ñ–∞–∑ —Ü–∏–∫–ª–∞\n\n"
            "üìä <b>–°–≤–æ–¥–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫</b> - –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–æ–π, —Ñ–∞–∑–∞–º–∏ –∏ —Ñ–µ—Ä—Ç–∏–ª—å–Ω—ã–º–∏ –¥–Ω—è–º–∏\n\n"
            "üîÆ <b>–ü—Ä–æ–≥–Ω–æ–∑ —Ñ–µ—Ä—Ç–∏–ª—å–Ω–æ—Å—Ç–∏</b> - –∞–Ω–∞–ª–∏–∑ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –ø—Ä–æ–≥–Ω–æ–∑ —Å–ª–µ–¥—É—é—â–µ–π –æ–≤—É–ª—è—Ü–∏–∏\n\n"
            "üìÖ <b>–¢–µ–∫—É—â–∞—è —Ñ–∞–∑–∞</b> - –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π —Ñ–∞–∑—ã –º–µ–Ω—Å—Ç—Ä—É–∞–ª—å–Ω–æ–≥–æ —Ü–∏–∫–ª–∞\n\n"
            "<i>–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ—á–Ω–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –º–∏–Ω–∏–º—É–º 5-7 –∑–∞–ø–∏—Å–µ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã</i>"
        )
        
        await message.answer(help_text, reply_markup=builder.as_markup(), parse_mode="HTML")
        
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ handle_chart_request_button: {e}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

async def handle_temperature_chart(callback_query: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã"""
    try:
        user_id = callback_query.from_user.id
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
        await callback_query.message.edit_text("‚è≥ –°–æ–∑–¥–∞—é –≥—Ä–∞—Ñ–∏–∫ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã...")
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ü–∏–∫–ª (–¥–æ 40 –¥–Ω–µ–π)
        records = await db.get_user_records(user_id, limit=40)
        
        if not records:
            await callback_query.message.edit_text(
                "üìä –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞.\n"
                "–ù–∞—á–Ω–∏—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –≥—Ä–∞—Ñ–∏–∫."
            )
            return
        
        # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∑–∞–ø–∏—Å–∏ —Å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–æ–π
        temp_records = [r for r in records if r.get('temperature')]
        
        if len(temp_records) < 3:
            await callback_query.message.edit_text(
                "üìä –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –æ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞.\n"
                f"–£ –≤–∞—Å {len(temp_records)} –∑–∞–ø–∏—Å–µ–π, –Ω—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 3.\n"
                "–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∏–∑–º–µ—Ä–µ–Ω–∏—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã."
            )
            return
        
        # –°–æ–∑–¥–∞–µ–º –≥—Ä–∞—Ñ–∏–∫
        chart_buffer = await generate_fertility_chart(records, "temperature")
        
        if chart_buffer:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥—Ä–∞—Ñ–∏–∫
            photo = BufferedInputFile(chart_buffer.getvalue(), filename="temperature_chart.png")
            
            current_phase = get_current_fertility_phase(records)
            
            caption = (
                f"üìà <b>–ì—Ä–∞—Ñ–∏–∫ –±–∞–∑–∞–ª—å–Ω–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã</b>\n\n"
                f"üìÖ –¢–µ–∫—É—â–∞—è —Ñ–∞–∑–∞: <b>{current_phase}</b>\n"
                f"üìä –ó–∞–ø–∏—Å–µ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã: <b>{len(temp_records)}</b>\n"
                f"üìù –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: <b>{len(records)}</b>\n\n"
                f"<i>–ì—Ä–∞—Ñ–∏–∫ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã —Å –≤—ã–¥–µ–ª–µ–Ω–∏–µ–º —Ñ–∞–∑ —Ü–∏–∫–ª–∞:</i>\n"
                f"üî¥ –ú–µ–Ω—Å—Ç—Ä—É–∞—Ü–∏—è\n"
                f"üîµ –§–æ–ª–ª–∏–∫—É–ª—è—Ä–Ω–∞—è —Ñ–∞–∑–∞\n"
                f"‚≠ê –û–≤—É–ª—è—Ü–∏—è\n"
                f"üü¢ –õ—é—Ç–µ–∏–Ω–æ–≤–∞—è —Ñ–∞–∑–∞\n"
                f"üü† –§–µ—Ä—Ç–∏–ª—å–Ω—ã–µ –¥–Ω–∏"
            )
            
            await callback_query.message.answer_photo(
                photo=photo,
                caption=caption,
                parse_mode="HTML"
            )
            
            await callback_query.message.delete()
        else:
            await callback_query.message.edit_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
            
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ handle_temperature_chart: {e}")
        await callback_query.message.edit_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≥—Ä–∞—Ñ–∏–∫–∞.")

async def handle_summary_chart(callback_query: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–∑–¥–∞–Ω–∏—è —Å–≤–æ–¥–Ω–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞"""
    try:
        user_id = callback_query.from_user.id
        
        await callback_query.message.edit_text("‚è≥ –°–æ–∑–¥–∞—é —Å–≤–æ–¥–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫...")
        
        records = await db.get_user_records(user_id, limit=40)
        
        if not records:
            await callback_query.message.edit_text(
                "üìä –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞."
            )
            return
        
        # –°–æ–∑–¥–∞–µ–º —Å–≤–æ–¥–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫
        chart_buffer = await generate_fertility_chart(records, "summary")
        
        if chart_buffer:
            photo = BufferedInputFile(chart_buffer.getvalue(), filename="summary_chart.png")
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            predictions = get_fertility_predictions(records)
            
            caption = (
                f"üìä <b>–°–≤–æ–¥–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫ —Ü–∏–∫–ª–∞</b>\n\n"
                f"üìÖ –¢–µ–∫—É—â–∞—è —Ñ–∞–∑–∞: <b>{predictions.get('current_phase', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}</b>\n"
                f"üìè –î–ª–∏–Ω–∞ —Ü–∏–∫–ª–∞: <b>{predictions.get('cycle_length', 0)} –¥–Ω–µ–π</b>\n"
                f"üü† –§–µ—Ä—Ç–∏–ª—å–Ω—ã—Ö –¥–Ω–µ–π: <b>{predictions.get('fertile_days_count', 0)}</b>\n"
            )
            
            if predictions.get('ovulation_day'):
                caption += f"‚≠ê –î–µ–Ω—å –æ–≤—É–ª—è—Ü–∏–∏: <b>{predictions['ovulation_day']}</b>\n"
            
            if predictions.get('next_ovulation_estimate'):
                caption += f"üîÆ –°–ª–µ–¥—É—é—â–∞—è –æ–≤—É–ª—è—Ü–∏—è (–ø—Ä–∏–º–µ—Ä–Ω–æ): <b>{predictions['next_ovulation_estimate']}</b>\n"
            
            caption += (
                f"\n<i>–í–µ—Ä—Ö–Ω–∏–π –≥—Ä–∞—Ñ–∏–∫ - —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å —Ñ–∞–∑–∞–º–∏\n"
                f"–ù–∏–∂–Ω–∏–π –≥—Ä–∞—Ñ–∏–∫ - –∫–∞–ª–µ–Ω–¥–∞—Ä—å —Ñ–µ—Ä—Ç–∏–ª—å–Ω–æ—Å—Ç–∏</i>"
            )
            
            await callback_query.message.answer_photo(
                photo=photo,
                caption=caption,
                parse_mode="HTML"
            )
            
            await callback_query.message.delete()
        else:
            await callback_query.message.edit_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫.")
            
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ handle_summary_chart: {e}")
        await callback_query.message.edit_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≥—Ä–∞—Ñ–∏–∫–∞.")

async def handle_fertility_prediction(callback_query: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–≥–Ω–æ–∑–∞ —Ñ–µ—Ä—Ç–∏–ª—å–Ω–æ—Å—Ç–∏"""
    try:
        user_id = callback_query.from_user.id
        
        await callback_query.message.edit_text("üîÆ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞...")
        
        records = await db.get_user_records(user_id, limit=40)
        
        if not records:
            await callback_query.message.edit_text(
                "üîÆ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞.\n"
                "–î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ –∑–∞–ø–∏—Å–µ–π –æ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ –∏ –¥—Ä—É–≥–∏—Ö –Ω–∞–±–ª—é–¥–µ–Ω–∏—è—Ö."
            )
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–≥–Ω–æ–∑
        predictions = get_fertility_predictions(records)
        
        if predictions.get('error'):
            await callback_query.message.edit_text(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {predictions['error']}")
            return
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –ø—Ä–æ–≥–Ω–æ–∑–∞
        prediction_text = f"üîÆ <b>–ê–Ω–∞–ª–∏–∑ —Ñ–µ—Ä—Ç–∏–ª—å–Ω–æ—Å—Ç–∏</b>\n\n"
        
        # –¢–µ–∫—É—â–∞—è —Ñ–∞–∑–∞
        prediction_text += f"üìÖ <b>–¢–µ–∫—É—â–∞—è —Ñ–∞–∑–∞:</b> {predictions.get('current_phase', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\n"
        
        # –î–ª–∏–Ω–∞ —Ü–∏–∫–ª–∞
        cycle_length = predictions.get('cycle_length', 0)
        if cycle_length > 0:
            prediction_text += f"üìè <b>–î–ª–∏–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ —Ü–∏–∫–ª–∞:</b> {cycle_length} –¥–Ω–µ–π\n"
        
        # –û–≤—É–ª—è—Ü–∏—è
        ovulation_day = predictions.get('ovulation_day')
        if ovulation_day:
            prediction_text += f"‚≠ê <b>–î–µ–Ω—å –æ–≤—É–ª—è—Ü–∏–∏:</b> {ovulation_day}\n"
        else:
            prediction_text += f"‚≠ê <b>–û–≤—É–ª—è—Ü–∏—è:</b> –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞\n"
        
        # –§–µ—Ä—Ç–∏–ª—å–Ω—ã–µ –¥–Ω–∏
        fertile_count = predictions.get('fertile_days_count', 0)
        prediction_text += f"üü† <b>–§–µ—Ä—Ç–∏–ª—å–Ω—ã—Ö –¥–Ω–µ–π –≤ —Ü–∏–∫–ª–µ:</b> {fertile_count}\n"
        
        if predictions.get('fertile_days'):
            fertile_days_str = ", ".join(predictions['fertile_days'][-5:])  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –¥–Ω–µ–π
            prediction_text += f"üìÖ <b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ñ–µ—Ä—Ç–∏–ª—å–Ω—ã–µ –¥–Ω–∏:</b> {fertile_days_str}\n"
        
        # –ü—Ä–æ–≥–Ω–æ–∑ —Å–ª–µ–¥—É—é—â–µ–π –æ–≤—É–ª—è—Ü–∏–∏
        if predictions.get('next_ovulation_estimate'):
            prediction_text += f"\nüîÆ <b>–ü—Ä–æ–≥–Ω–æ–∑ —Å–ª–µ–¥—É—é—â–µ–π –æ–≤—É–ª—è—Ü–∏–∏:</b>\n{predictions['next_ovulation_estimate']}\n"
            prediction_text += f"<i>(–ø—Ä–∏–º–µ—Ä–Ω–∞—è –¥–∞—Ç–∞, –æ—Å–Ω–æ–≤–∞–Ω–∞ –Ω–∞ —Å—Ä–µ–¥–Ω–µ–π –¥–ª–∏–Ω–µ —Ü–∏–∫–ª–∞)</i>\n"
        
        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        prediction_text += f"\nüí° <b>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</b>\n"
        
        if cycle_length < 10:
            prediction_text += f"‚Ä¢ –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∏–∑–º–µ—Ä–µ–Ω–∏—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã\n"
            prediction_text += f"‚Ä¢ –î–æ–±–∞–≤–ª—è–π—Ç–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –∑–∞ —Å–ª–∏–∑—å—é –∏ –¥—Ä—É–≥–∏–º–∏ —Å–∏–º–ø—Ç–æ–º–∞–º–∏\n"
        elif ovulation_day is None:
            prediction_text += f"‚Ä¢ –î–ª—è —Ç–æ—á–Ω–æ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ–≤—É–ª—è—Ü–∏–∏ –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ –¥–∞–Ω–Ω—ã—Ö\n"
            prediction_text += f"‚Ä¢ –ò–∑–º–µ—Ä—è–π—Ç–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –∫–∞–∂–¥–æ–µ —É—Ç—Ä–æ –≤ –æ–¥–Ω–æ –≤—Ä–µ–º—è\n"
        else:
            prediction_text += f"‚Ä¢ –ì—Ä–∞—Ñ–∏–∫ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ö–æ—Ä–æ—à—É—é –¥–∏–Ω–∞–º–∏–∫—É\n"
            prediction_text += f"‚Ä¢ –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è\n"
        
        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
        builder = InlineKeyboardBuilder()
        builder.button(text="üìà –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≥—Ä–∞—Ñ–∏–∫", callback_data="chart_temperature")
        builder.button(text="üìä –°–≤–æ–¥–Ω—ã–π –∞–Ω–∞–ª–∏–∑", callback_data="chart_summary")
        builder.adjust(1)
        
        await callback_query.message.edit_text(
            prediction_text, 
            parse_mode="HTML",
            reply_markup=builder.as_markup()
        )
        
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ handle_fertility_prediction: {e}")
        await callback_query.message.edit_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –¥–∞–Ω–Ω—ã—Ö.")

async def handle_current_phase(callback_query: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π —Ñ–∞–∑—ã"""
    try:
        user_id = callback_query.from_user.id
        
        await callback_query.message.edit_text("üìÖ –û–ø—Ä–µ–¥–µ–ª—è—é —Ç–µ–∫—É—â—É—é —Ñ–∞–∑—É...")
        
        records = await db.get_user_records(user_id, limit=40)
        
        if not records:
            await callback_query.message.edit_text(
                "üìÖ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ñ–∞–∑—ã —Ü–∏–∫–ª–∞.\n"
                "–î–æ–±–∞–≤—å—Ç–µ –∑–∞–ø–∏—Å–∏ –æ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ –∏ –º–µ–Ω—Å—Ç—Ä—É–∞—Ü–∏–∏."
            )
            return
        
        current_phase = get_current_fertility_phase(records)
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        temp_records = [r for r in records if r.get('temperature')]
        last_temp = temp_records[0].get('temperature') if temp_records else None
        last_date = records[0]['record_date'] if records else None
        
        phase_text = f"üìÖ <b>–ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—É—â–µ–π —Ñ–∞–∑—ã</b>\n\n"
        phase_text += f"üéØ <b>–¢–µ–∫—É—â–∞—è —Ñ–∞–∑–∞:</b> {current_phase}\n"
        
        if last_date:
            if isinstance(last_date, str):
                date_obj = datetime.strptime(last_date, '%Y-%m-%d').date()
            else:
                date_obj = last_date
            phase_text += f"üìÜ <b>–ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–ø–∏—Å—å:</b> {date_obj.strftime('%d.%m.%Y')}\n"
        
        if last_temp:
            phase_text += f"üå° <b>–ü–æ—Å–ª–µ–¥–Ω—è—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:</b> {last_temp}¬∞C\n"
        
        phase_text += f"üìä <b>–í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π:</b> {len(records)}\n"
        
        # –û–ø–∏—Å–∞–Ω–∏–µ —Ñ–∞–∑
        phase_descriptions = {
            "–ú–µ–Ω—Å—Ç—Ä—É–∞—Ü–∏—è": "üî¥ –ú–µ–Ω—Å—Ç—Ä—É–∞–ª—å–Ω–∞—è —Ñ–∞–∑–∞ - –≤—Ä–µ–º—è –º–µ—Å—è—á–Ω—ã—Ö. –£—Ä–æ–≤–µ–Ω—å –≥–æ—Ä–º–æ–Ω–æ–≤ –Ω–∏–∑–∫–∏–π, —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –æ–±—ã—á–Ω–æ —Å–Ω–∏–∂–µ–Ω–∞.",
            "–§–æ–ª–ª–∏–∫—É–ª—è—Ä–Ω–∞—è": "üîµ –§–æ–ª–ª–∏–∫—É–ª—è—Ä–Ω–∞—è —Ñ–∞–∑–∞ - –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –æ–≤—É–ª—è—Ü–∏–∏. –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–∏–∑–∫–∞—è, –æ—Ä–≥–∞–Ω–∏–∑–º –≥–æ—Ç–æ–≤–∏—Ç—Å—è –∫ –æ–≤—É–ª—è—Ü–∏–∏.",
            "–û–≤—É–ª—è—Ü–∏—è": "‚≠ê –û–≤—É–ª—è—Ü–∏—è - —Å–∞–º—ã–π —Ñ–µ—Ä—Ç–∏–ª—å–Ω—ã–π –ø–µ—Ä–∏–æ–¥! –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç –ø–æ–≤—ã—à–∞—Ç—å—Å—è –ø–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞ —è–π—Ü–µ–∫–ª–µ—Ç–∫–∏.",
            "–õ—é—Ç–µ–∏–Ω–æ–≤–∞—è": "üü¢ –õ—é—Ç–µ–∏–Ω–æ–≤–∞—è —Ñ–∞–∑–∞ - –ø–æ—Å–ª–µ –æ–≤—É–ª—è—Ü–∏–∏. –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ–≤—ã—à–µ–Ω–∞, –Ω–∏–∑–∫–∞—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –∑–∞—á–∞—Ç–∏—è.",
            "–ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–∞—è": "‚ùì –§–∞–∑–∞ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ - –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞."
        }
        
        description = phase_descriptions.get(current_phase, "")
        if description:
            phase_text += f"\nüí° <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b>\n{description}\n"
        
        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ñ–∞–∑–∞–º
        recommendations = {
            "–ú–µ–Ω—Å—Ç—Ä—É–∞—Ü–∏—è": "‚Ä¢ –û—Ç–¥—ã—Ö–∞–π—Ç–µ –±–æ–ª—å—à–µ\n‚Ä¢ –ü—Ä–∏–Ω–∏–º–∞–π—Ç–µ —Ç–µ–ø–ª—ã–µ –≤–∞–Ω–Ω—ã\n‚Ä¢ –°–ª–µ–¥–∏—Ç–µ –∑–∞ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å—é –∫—Ä–æ–≤–æ—Ç–µ—á–µ–Ω–∏—è",
            "–§–æ–ª–ª–∏–∫—É–ª—è—Ä–Ω–∞—è": "‚Ä¢ –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∏–∑–º–µ—Ä–µ–Ω–∏—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã\n‚Ä¢ –ù–∞–±–ª—é–¥–∞–π—Ç–µ –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ —Å–ª–∏–∑–∏\n‚Ä¢ –ì–æ—Ç–æ–≤—å—Ç–µ—Å—å –∫ —Ñ–µ—Ä—Ç–∏–ª—å–Ω–æ–º—É –ø–µ—Ä–∏–æ–¥—É",
            "–û–≤—É–ª—è—Ü–∏—è": "‚Ä¢ –°–∞–º–æ–µ —Ñ–µ—Ä—Ç–∏–ª—å–Ω–æ–µ –≤—Ä–µ–º—è!\n‚Ä¢ –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Å–∏–º–ø—Ç–æ–º—ã –æ–≤—É–ª—è—Ü–∏–∏\n‚Ä¢ –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –¥–æ–ª–∂–Ω–∞ –ø–æ–¥–Ω—è—Ç—å—Å—è –≤ –±–ª–∏–∂–∞–π—à–∏–µ –¥–Ω–∏",
            "–õ—é—Ç–µ–∏–Ω–æ–≤–∞—è": "‚Ä¢ –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –¥–æ–ª–∂–Ω–∞ –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –≤—ã—Å–æ–∫–æ–π\n‚Ä¢ –ù–∞–±–ª—é–¥–∞–π—Ç–µ –∑–∞ –ü–ú–° —Å–∏–º–ø—Ç–æ–º–∞–º–∏\n‚Ä¢ –î–æ –º–µ–Ω—Å—Ç—Ä—É–∞—Ü–∏–∏ –ø—Ä–∏–º–µ—Ä–Ω–æ 12-16 –¥–Ω–µ–π",
            "–ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–∞—è": "‚Ä¢ –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∏–∑–º–µ—Ä–µ–Ω–∏—è\n‚Ä¢ –î–æ–±–∞–≤–ª—è–π—Ç–µ –≤—Å–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è\n‚Ä¢ –î–ª—è —Ç–æ—á–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –Ω—É–∂–Ω–æ –≤—Ä–µ–º—è"
        }
        
        recommendation = recommendations.get(current_phase, "")
        if recommendation:
            phase_text += f"\nüéØ <b>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</b>\n{recommendation}\n"
        
        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
        builder = InlineKeyboardBuilder()
        builder.button(text="üìà –ì—Ä–∞—Ñ–∏–∫ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã", callback_data="chart_temperature")
        builder.button(text="üîÆ –ü–æ–ª–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑", callback_data="chart_prediction")
        builder.adjust(1)
        
        await callback_query.message.edit_text(
            phase_text, 
            parse_mode="HTML",
            reply_markup=builder.as_markup()
        )
        
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ handle_current_phase: {e}")
        await callback_query.message.edit_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ —Ñ–∞–∑—ã.")

async def handle_chart_button(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –≥—Ä–∞—Ñ–∏–∫–∞–º"""
    await handle_chart_request_button(message)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –≥—Ä–∞—Ñ–∏–∫–æ–≤
def register_chart_handlers(dp):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –≥—Ä–∞—Ñ–∏–∫–æ–≤"""
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–ª–ª–±—ç–∫–æ–≤
    dp.callback_query.register(handle_temperature_chart, lambda c: c.data == "chart_temperature")
    dp.callback_query.register(handle_summary_chart, lambda c: c.data == "chart_summary")
    dp.callback_query.register(handle_fertility_prediction, lambda c: c.data == "chart_prediction")
    dp.callback_query.register(handle_current_phase, lambda c: c.data == "chart_current_phase")
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥
    dp.message.register(handle_chart_request_button, F.text == "üìä –ì—Ä–∞—Ñ–∏–∫–∏ –∏ –∞–Ω–∞–ª–∏–∑")
    dp.message.register(handle_chart_button, F.text == "üìà –ú–æ–π –≥—Ä–∞—Ñ–∏–∫")
    
    logging.info("–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≥—Ä–∞—Ñ–∏–∫–æ–≤ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –¥–∞–Ω–Ω—ã—Ö
async def send_automatic_chart_updates():
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥—Ä–∞—Ñ–∏–∫–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    (–º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ –∑–∞–¥–∞—á)
    """
    try:
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
        # –≥—Ä–∞—Ñ–∏–∫–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, —É –∫–æ—Ç–æ—Ä—ã—Ö –Ω–∞–∫–æ–ø–∏–ª–æ—Å—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö
        logging.info("–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –≥—Ä–∞—Ñ–∏–∫–æ–≤...")
        
        # –ü—Ä–∏–º–µ—Ä: –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –Ω–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –¥–Ω—è
        # –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏
        
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤: {e}")

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±—ã—Å—Ç—Ä–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
async def get_quick_fertility_status(user_id: int) -> str:
    """–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ç—É—Å —Ñ–µ—Ä—Ç–∏–ª—å–Ω–æ—Å—Ç–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        records = await db.get_user_records(user_id, limit=10)
        
        if not records:
            return "üìä –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞"
        
        current_phase = get_current_fertility_phase(records)
        temp_records = len([r for r in records if r.get('temperature')])
        
        status = f"üìÖ –§–∞–∑–∞: {current_phase}\n"
        status += f"üìä –ó–∞–ø–∏—Å–µ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã: {temp_records}/10"
        
        return status
        
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {e}")
        return "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö"